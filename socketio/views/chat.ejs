<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
    <script src="/javascripts/socket.io.min.js"></script>
  </head>
  <body>
    <div>聊天室</div>
    <div>当前用户: <span id="user"></span></div>
    <input type="text" id="text" /> <button id="send">发送</button>
    <select name="select" id="select"></select>

    <script>
      var select = document.querySelector("#select");
      var send = document.querySelector("#send");
      var text = document.querySelector("#text");
      var user = document.querySelector("#user");

      user.innerHTML = localStorage.getItem("username");
      const WebSocketType = {
        Error: 0, //错误
        GroupList: 1, //群列表
        GroupChat: 2, //群聊
        SingleChat: 3, //私聊
      };

      const socket = io(`ws://localhost:3000?token=${localStorage.getItem("token")}`);

      socket.on("connect", () => {
        socket.emit(WebSocketType.GroupList);
      });

      socket.on(WebSocketType.GroupList, (messageObj) => {
        messageObj = JSON.parse(messageObj);
        select.innerHTML = "";
        select.innerHTML =
          `<option value="all">all</option>` +
          messageObj.data
            .map(
              (item) => `
    <option value="${item.username}">${item.username}</option>`
            )
            .join("");
      });

      socket.on(WebSocketType.GroupChat, (msgObj) => {
        msgObj = JSON.parse(msgObj);
        let title = msgObj.user ? msgObj.user.username : "广播";
        console.log(title + ":" + msgObj.data);
      });

      socket.on(WebSocketType.SingleChat, (msgObj) => {
        msgObj = JSON.parse(msgObj);
        console.log(msgObj.user.username + ":" + msgObj.data);
      });

      socket.on(WebSocketType.Error, (msgObj) => {
        localStorage.removeItem("token");
        location.href = "/login";
      });

      send.onclick = () => {
        if (select.value === "all") {
          socket.emit(WebSocketType.GroupChat, {
            data: text.value,
          });
        } else {
          socket.emit(WebSocketType.SingleChat, {
            data: text.value,
            to: select.value,
          });
        }
      };
    </script>
  </body>
</html>
