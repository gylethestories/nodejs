<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
  </head>
  <body>
    <div>聊天室</div>
    <input type="text" id="input" /> <button id="send">发送</button>
    <select name="select" id="select"></select>

    <script>
      var select = document.querySelector("#select");
      var send = document.querySelector("#send");
      var input = document.querySelector("#input");

      const WebSocketType = {
        Error: 0, //错误
        GroupList: 1, //群列表
        GroupChat: 2, //群聊
        SingleChat: 3, //私聊
      };

      const WebSocketTypeFn = {
        0: () => {
          localStorage.removeItem("token");
          window.location.href = "/login";
        }, //错误
        1: (msgObj) => {
          console.log("好友列表:", JSON.parse(msgObj.data));
          const onlineList = JSON.parse(msgObj.data);
          select.innerHTML = "";
          select.innerHTML = "<option>all</option>" + onlineList.map((item) => `<option>${item.username}</option>`).join("");
        }, //群列表
        2: (msgObj) => {
          let title = msgObj.user ? msgObj.user.username : "广播";
          console.log(title + ":" + msgObj.data);
        }, //群聊
        3: (msgObj) => {
          console.log(msgObj.user.username + ":" + msgObj.data);
        }, //私聊
      };
      //前端
      var ws = new WebSocket(`ws://localhost:8080?token=${localStorage.getItem("token")}`);
      ws.onopen = () => {
        console.log("open");
        ws.send(
          JSON.stringify({
            type: WebSocketType.GroupList,
          })
        );
      };
      ws.onmessage = (msgObj) => {
        msgObj = JSON.parse(msgObj.data);
        WebSocketTypeFn[msgObj.type](msgObj);
      };

      send.onclick = () => {
        if (select.value === "all") {
          ws.send(createMessage(WebSocketType.GroupChat, input.value, select.value));
        } else {
          ws.send(createMessage(WebSocketType.SingleChat, input.value, select.value));
        }
      };

      function createMessage(type, data, to) {
        return JSON.stringify({
          type,
          data,
          to,
        });
      }
    </script>
  </body>
</html>
